/**
  *             Copyright (C) SOJO Electric CO., Ltd. 2017-2018. All right reserved.
  * @file:      dlt634_5104slave_app.h
  * @brief:     The protect control logic.
  * @version:   V1.0.0
  * @author:    Mr.Sun
  * @date:      2017.12.19
  * @update:    
  */

#ifndef	_DLT634_5104SLAVE_LINK_H_
#define _DLT634_5104SLAVE_LINK_H_


/* INCLUDE FILES -------------------------------------------------------------*/
#include "dlt634_5104slave_config.h"
#include "stm32f4xx_hal.h"

#ifndef  FALSE
#define  FALSE     0
#define  TRUE      !FALSE
#endif

/* PUBLIC VARIABLE -----------------------------------------------------------*/

/* DEFINE --------------------------------------------------------------------*/

/* Á´Â·²ã½ÓÊÕ×´Ì¬ */

/* Struct  -------------------------------------------------------------------*/
#pragma pack(push,1)
typedef struct 
{
    uint8_t Milliseconds_L;   // D7-D0
    uint8_t Milliseconds_H;   // D7-D0
    uint8_t Minutes;					// D5-D0
    uint8_t Hours;						// D4-D0
    uint8_t DayofWeekMonth;		// WEEK(D7-D5)MONTH(D4-D0)
    uint8_t Months;						// D3-D0
    uint8_t Years;						// D6-D0
}_DLT634_5104SLAVE_CP56Time2a_t;

typedef struct 
{
    struct STATUS
    {
        uint8_t Length;
        union 
        {
            uint8_t priority;	
            uint8_t Lock_ID;
        }symbol;
    }status;

    struct HEAD
    {
        uint8_t TypeID;     
        uint8_t VSQ;  
        uint8_t COT_L;
        uint8_t COT_H;
        uint8_t PubAddr_L;
        uint8_t PubAddr_H;
    }Head;

    union 
    {
        uint8_t buff[256-sizeof(struct STATUS)-sizeof(struct HEAD)];
        
        struct 
        {
            uint8_t InfoAddr_L;
            uint8_t InfoAddr_M;
            uint8_t InfoAddr_H;
            uint8_t QOI; 
        }C_100;

        struct 
        {
            uint8_t InfoAddr_L;
            uint8_t InfoAddr_M;
            uint8_t InfoAddr_H;	
            _DLT634_5104SLAVE_CP56Time2a_t CP56Time2a;
        }C_103;

        struct 
        {
            uint8_t InfoAddr_L;
            uint8_t InfoAddr_M;
            uint8_t InfoAddr_H;	
            uint8_t QRP; 
        }C_105;

        struct 
        {
            uint8_t InfoAddr_L;
            uint8_t InfoAddr_M;
            uint8_t InfoAddr_H;	
            uint8_t COI; 
        }C_70;

        struct 
        {
            uint8_t InfoAddr_L;
            uint8_t InfoAddr_M;
            uint8_t InfoAddr_H;
            uint8_t FBP_L;
            uint8_t FBP_H;				
        }C_104;

        union 
        {
            struct 
            {
                struct 
                {
                    uint8_t InfoAddr_L;
                    uint8_t InfoAddr_M;
                    uint8_t InfoAddr_H;	
                    uint8_t Value; 
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD))/4];
            }SQ0;
            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M;
                uint8_t InfoAddr_H;
                struct 
                {
                    uint8_t Value; 
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-3)/1];
            }SQ1;
        }C_1;

        union 
        {
            struct 
            {
                struct 
                {
                    uint8_t InfoAddr_L;
                    uint8_t InfoAddr_M;
                    uint8_t InfoAddr_H;	
                    uint8_t Value; 
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD))/4];
            }SQ0;
            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M; 
                uint8_t InfoAddr_H;	
                struct 
                {
                    uint8_t Value; 
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-3)/1];
            }SQ1;
        }C_3;

        union 
        {
            struct 
            {
                struct 
                {
                    uint8_t InfoAddr_L;
                    uint8_t InfoAddr_M;
                    uint8_t InfoAddr_H;
                    uint8_t Value; 
                    _DLT634_5104SLAVE_CP56Time2a_t CP56Time2a;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD))/11];
            }SQ0;
            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M;
                uint8_t InfoAddr_H;	
                struct 
                {
                    uint8_t Value; 
                    _DLT634_5104SLAVE_CP56Time2a_t CP56Time2a;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-3)/8];
            }SQ1;
        }C_30;

        union 
        {
            struct 
            {
                struct 
                {
                    uint8_t InfoAddr_L;
                    uint8_t InfoAddr_M;
                    uint8_t InfoAddr_H;	
                    uint8_t Value; 
                    _DLT634_5104SLAVE_CP56Time2a_t CP56Time2a;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD))/11];
            }SQ0;
            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M;
                uint8_t InfoAddr_H;	
                struct 
                {
                    uint8_t Value; 
                    _DLT634_5104SLAVE_CP56Time2a_t CP56Time2a;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-3)/8];
            }SQ1;
        }C_31;

        union 
        {
            struct 
            {
                struct 
                {
                    uint8_t InfoAddr_L;
                    uint8_t InfoAddr_M;
                    uint8_t InfoAddr_H;
                    uint16_t Value;
                    uint8_t QDS;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD))/8];
            }SQ0;
            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M;
                uint8_t InfoAddr_H;	
                struct 
                {
                    uint16_t Value;									
                    uint8_t QDS;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-3)/5];
            }SQ1;
        }C_9;

        union 
        {
            struct 
            {
                struct 
                {
                    uint8_t InfoAddr_L;
                    uint8_t InfoAddr_M;
                    uint8_t InfoAddr_H;
                    uint16_t Value;
                    uint8_t QDS;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD))/8];
            }SQ0;
            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M;
                uint8_t InfoAddr_H;
                struct 
                {
                    uint16_t Value;
                    uint8_t QDS;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-3)/5];
            }SQ1;
        }C_11;

        union 
        {
            struct 
            {
                struct 
                {
                    uint8_t InfoAddr_L;
                    uint8_t InfoAddr_M;
                    uint8_t InfoAddr_H;
                    uint32_t Value;	
                    uint8_t QDS;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD))/8];
            }SQ0;

            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M;
                uint8_t InfoAddr_H;
                struct 
                {
                    uint32_t Value;	
                    uint8_t QDS;
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-3)/5];
            }SQ1;
        }C_13;

        struct 
        {
            uint8_t InfoAddr_L;
            uint8_t InfoAddr_M;
            uint8_t InfoAddr_H;
            uint8_t SCO_L;
            uint8_t SCO_H;
        }C_45;	

        struct 
        {
            uint8_t InfoAddr_L;
            uint8_t InfoAddr_M;
            uint8_t InfoAddr_H;	
            uint8_t DCO_L;
            uint8_t DCO_H;
        }C_46;	

        struct 
        {
            uint8_t Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD))]; 
        }C_42;

        struct 
        {
            uint8_t InfoAddr_L;
            uint8_t InfoAddr_M;
            uint8_t InfoAddr_H;	
            uint8_t SN_L;
            uint8_t SN_H;
        }C_200;

        union 
        {
            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M;
                uint8_t InfoAddr_H;
            }Down;

            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M;
                uint8_t InfoAddr_H;	
                uint8_t SN1_L;
                uint8_t SN1_H;
                uint8_t SN2_L;
                uint8_t SN2_H;
                uint8_t SN3_L;
                uint8_t SN3_H;
            }Up;
        }C_201;

        union 
        {
            struct 
            {
                uint8_t SN1_L;
                uint8_t SN1_H;
                uint16_t Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-2)/4];		
            }Down;

            struct 
            {
                uint8_t SN_L;
                uint8_t SN_H;	
                uint8_t PI_L;
                uint8_t PI_H;
                struct 
                {
                    uint8_t InfoAddr_L;
                    uint8_t InfoAddr_M;
                    uint8_t InfoAddr_H;
                    uint8_t Tag;
                    uint8_t Len;
                    uint32_t Value;	
                }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-4)/9];
            }Up;
        }C_202;

        union 
        {
            uint8_t SN_L;
            uint8_t SN_H;	
            uint8_t PI_L;
            uint8_t PI_H;
            struct 
            {
                uint8_t InfoAddr_L;
                uint8_t InfoAddr_M;
                uint8_t InfoAddr_H;
                uint8_t Tag;
                uint8_t Len;
                uint32_t Value;	
            }Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD)-4)/9];
        }C_203;

        struct 
        {
            uint8_t Array[(256-sizeof(struct STATUS)-sizeof(struct HEAD))]; 
        }C_210;
    }Data;
}DLT634_5104SLAVE_PASDU;

 struct DLT634_5104SLAVE_PASDU_104
{
     struct PASDUHead_104
    {   
        uint8_t	TypeID; // ÀàÐÍ±êÊ¶
        uint8_t	VSQ;    // ¿É±ä½á¹¹ÏÞ¶¨´Ê
     
        // ´«ËÍÔ­Òò
        uint16_t COT;

        // Ó¦ÓÃ·þÎñÊý¾Ýµ¥Ôª¹«¹²µØÖ·
        uint16_t PubAddr;

        // ÐÅÏ¢¶ÔÏóµØÖ·
        uint16_t InfoAddr;
    }Head;
    uint8_t Data[DLT634_5104SLAVE_ASDUSIZE - sizeof(struct PASDUHead_104)];
};

struct DLT634_5104SLAVE_SendData
{
    uint8_t TxLen;
    uint8_t TxData[DLT634_5104SLAVE_ASDUSIZE];	
};  
		
/* ×é´¦Àí½á¹¹ -----------------------------------------------------------------*/ 
struct DLT634_5104SLAVE_APPINFO
{	
    uint8_t Connect; // ÍøÂçÁ¬½Ó×´Ì¬	

    uint8_t  YXTypeID;           // Ò£ÐÅÀàÐÍ±êÊ¶
    uint8_t  YCTypeID;           // Ò£²âÀàÐÍ±êÊ¶	
	
	uint8_t  SDataEn;            // ±¸·Ý·¢ËÍÊ¹ÄÜ
    int16_t  CurSData;          // Î´±»È·ÈÏµÄIÖ¡±¸·Ý»º³åÇøÎ»ÖÃ±êÊ¶
    int16_t  SDataIn;           // Î´±»È·ÈÏµÄIÖ¡±¸·Ý»º³åÇøÈëÖ¸Õë
	int16_t  SDataOut;           // Î´±»È·ÈÏµÄIÖ¡±¸·Ý»º³åÇø³öÖ¸Õë
	
  	uint8_t  RxdBuf[2*DLT634_5104SLAVE_APDUSIZE]; // ½ÓÊÕ»º³åÇø
    uint8_t  TxdBuf[2*DLT634_5104SLAVE_APDUSIZE]; // ·¢ËÍ»º³åÇø	

  	uint32_t  Data1Flag; 
    uint32_t  AllDataFlag; // ×ÜÕÙ×´Ì¬±êÖ¾
    uint32_t  AppNextFlag; // Ðø·¢Êý¾Ý±êÖ¾

  	uint8_t TxLen;     

  	struct DLT634_5104SLAVE_PASDU_104 TxMsg;  // Ó¦ÓÃ²ã·¢ËÍÊý¾ÝÖ¸Õë
//    struct DLT634_5104SLAVE_PASDU_104 RxMsg; // Ó¦ÓÃ²ã½ÓÊÕÊý¾ÝÖ¸Õë 		
	
    struct DLT634_5104SLAVE_SendData SData[DLT634_5104SLAVE_K + 1]; // Î´±»È·ÈÏµÄIÖ¡±¸·Ý    

    struct PGroupTrn
    {		
        uint16_t InfoAddr;
        uint8_t TypeID;
        uint8_t COT;
        uint8_t GroupNo;
    }GroupTrn;// ·Ö×é´¦Àí½á¹¹Ìå
	
    DLT634_5104SLAVE_PASDU *StoreDATA1IN;              // ´ý·¢ËÍ»º³åÇø1¼¶Êý¾ÝÈëÖ¸Õë
    DLT634_5104SLAVE_PASDU *StoreDATA1OUT;             // ´ý·¢ËÍ»º³åÇø1¼¶Êý¾Ý³öÖ¸Õë
    DLT634_5104SLAVE_PASDU StoreDATA1Buf[DLT634_5104SLAVE_STOREDATA1NUM];     	// 1¼¶Êý¾Ý´ý·¢ËÍ»º³åÇø
    DLT634_5104SLAVE_PASDU *StoreDATA2IN;              // ´ý·¢ËÍ»º³åÇø1¼¶Êý¾ÝÈëÖ¸Õë
    DLT634_5104SLAVE_PASDU *StoreDATA2OUT;             // ´ý·¢ËÍ»º³åÇø1¼¶Êý¾Ý³öÖ¸Õë
    DLT634_5104SLAVE_PASDU StoreDATA2Buf[DLT634_5104SLAVE_STOREDATA2NUM];     	// 2¼¶Êý¾Ý´ý·¢ËÍ»º³åÇø
    DLT634_5104SLAVE_PASDU ST_Temp;              // ´æ´¢Êý¾Ý´¦Àí

    DLT634_5104SLAVE_PASDU TX_Temp;              //·¢ËÍÊý¾Ý´¦Àí
    DLT634_5104SLAVE_PASDU RX_Temp;              //½ÓÊÜÊý¾Ý´¦Àí  

    uint16_t AllData_yx_sendaddr;
    uint16_t AllData_yc_sendaddr;    
};

struct DLT634_5104SLAVE_PAPCI
{
    uint8_t	StartCode;
    uint8_t	Length;
    uint16_t NS;
    uint16_t NR;
};

struct DLT634_5104SLAVE_LINKINFO
{
    uint8_t Connect; // ÍøÂçÁ¬½Ó×´Ì¬
    uint8_t DataType[DLT634_5104SLAVE_K]; // ½ÓÊÕÊý¾ÝÀàÐÍ£¬I¸ñÊ½Ö¡
    uint8_t StopSendFlag; //Í£Ö¹·¢ËÍ±êÖ¾(Î´±»È·ÈÏµÄI¸ñÊ½Ö¡´ïµ½K¸ö£¬Í£Ö¹·¢ËÍ)		

    uint8_t RxdBuf[2*DLT634_5104SLAVE_APDUSIZE]; // ½ÓÊÕ»º³åÇø
    uint8_t TxdBuf[2*DLT634_5104SLAVE_APDUSIZE]; // ·¢ËÍ»º³åÇø		

    uint16_t NR; // ½ÓÊÕ°ü¼ÆÊý
    uint16_t NS; // ·¢ËÍ°ü¼ÆÊý
    uint16_t NRACK; // ÉÏ´ÎÈ·ÈÏµÄ½ÓÊÜÐòÁÐºÅ

    uint16_t PeerNoAckNum; // ¶Ô·½Î´·¢ËÍÈ·ÈÏµÄI¸ñÊ½Ö¡ÊýÄ¿	  

    uint16_t RxdHead; // ´¦ÀíÊý¾ÝµÄÍ·Ö¸Õë
    uint16_t RxdTail;		
    uint16_t RxdLength;

    uint16_t FrameHead; // ×éÖ¡Ê±Êý¾ÝÍ·ÔÚ·¢ËÍ»º³åÇøµÄÎ»ÖÃ
    uint16_t TxdHead;
    uint16_t TxdTail;

    // ²ÎÊýÊäÈë
    uint16_t Tick0;
    uint16_t Tick1;
    uint16_t Tick2;
    uint16_t Tick3;

    uint32_t  ClockCounter;  // ³ÌÐòÔËÐÐÖÜÆÚ¿ØÖÆ
		
    enum DLRXDSTATUS
    {
            RXDSTART = 0,	                               // Ñ°ÕÒÆðÊ¼±êÖ¾×´Ì¬
            RXDHEAD,	                                   // Ñ°ÕÒ±¨ÎÄÍ·
            RXDCONTINUE                                  // ½ÓÊÕºóÐø±¨ÎÄ
    }RxdStatus;// ½ÓÊÕ×´Ì¬
        
    struct PTick
    {
        uint16_t TValue0;	
        uint16_t TValue1[DLT634_5104SLAVE_K];
        uint16_t TValue2;
        uint16_t TValue3;
        uint8_t	Flag; // °´Î»Ê¹ÓÃ
        uint8_t	FlagBak; // ±¸·Ý
    }Tick;				
};

struct DLT634_5104SLAVE_AppMsg
{
    uint16_t Cmd;
    uint16_t ConNum;
    uint8_t Len;
    uint8_t* pData;
};

struct DLT634_5104SLAVE_PAD
{
    uint8_t   Port;            //¶Ë¿Ú

    uint8_t   CotSize;      // ´«ÊäÔ­Òò×Ö½Ú³¤¶È
    uint8_t   PubAddrSize;  // Á´Â·¹«¹²µØÖ·×Ö½Ú³¤¶È
    uint8_t   LinkAddrSize; // Á´Â·µØÖ·Õ¼ÓÃ×Ö½Ú  
    uint8_t   InfoAddrSize; // ÐÅÏ¢ÌåµØÖ·×Ö½Ú³¤¶È

    uint8_t  YCNum;        // Ò£²âÁ¿×ÜÊý
    uint8_t  YXNum;        // Ò£ÐÅÁ¿×ÜÊý
    uint8_t  YKNum;        // Ò£¿ØÁ¿×ÜÊý
    uint8_t  DDNum;        // µç¶ÈÁ¿×ÜÊý

    uint16_t  LinkAddress;  // Á´Â·µØÖ·,Á´Â·µØÖ·¿ÉÓë¹«¹²µØÖ·ÏàÍ¬ 	  
    uint16_t  PubAddress;   // ¹«¹²µØÖ·£¬¿ÉÓëÁ´Â·µØÖ·ÏàÍ¬£¬¼´£ºÍ¬Ò»Á´Â·ÉÏµÄÉè±¸(×ÓÕ¾)µØÖ·

    uint16_t  YX_AllNum;    // Ò£ÐÅ×ÜÊý
    uint16_t  YX_FirstAddr; // Ò£ÐÅÊ×µØÖ·
    uint16_t  YX_FrameNum;	// Ò£ÐÅÃ¿×éÊýÁ¿
    uint16_t  YC_AllNum;		// Ò£²â×ÜÊý
    uint16_t  YC_FirstAddr; // Ò£ÐÅÊ×µØÖ·
    uint16_t  YC_FrameNum;  // Ò£²âÃ¿×éÊýÁ¿

    uint32_t  TickValue[4]; // IEC104 4¸öÑÓÊ±Ê±ÖÓ
    uint32_t   ClockTimers;  // µ÷ÓÃ³¬³ö´ÎÊý£¬³ÌÐòÖ´ÐÐÒ»´Î£¬¿ØÖÆÔËÐÐÖÜÆÚ
};
#pragma pack(pop)
/* PUBLIC VARIABLES ----------------------------------------------------------*/
extern struct DLT634_5104SLAVE_PAD DLT634_5104Slave_Pad[DLT634_5104SLAVE_VOLUMES]; // DL/T634_5101¹æÔ¼²ÎÊý

/* PUBLIC FUNCTION DECLARATION -----------------------------------------------*/
extern uint8_t DLT634_5104_SLAVE_Clock(uint8_t port);
extern uint8_t DLT634_5104_SLAVE_AppInit(uint8_t port);
extern void DLT634_5104_SLAVE_ParaInit(uint8_t port);
extern uint8_t DLT634_5104_SLAVE_Reply(uint8_t pdrv, uint8_t *pbuf);

#endif /* END _DLT634_5104SLAVE_LINK_H_*/

/* END OF FILE ---------------------------------------------------------------*/


